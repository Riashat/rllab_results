{
  "args_data": "gANjcmxsYWIubWlzYy5pbnN0cnVtZW50ClN0dWJNZXRob2RDYWxsCnEAKYFxAX1xAihYCAAAAF9fa3dhcmdzcQN9cQRYBgAAAF9fYXJnc3EFKGNybGxhYi5taXNjLmluc3RydW1lbnQKU3R1Yk9iamVjdApxBimBcQd9cQgoWAYAAABrd2FyZ3NxCX1xCihYAgAAAHFmcQtoBimBcQx9cQ0oaAl9cQ4oWBMAAABoaWRkZW5fbm9ubGluZWFyaXR5cQ9jdGVuc29yZmxvdy5weXRob24ub3BzLmdlbl9ubl9vcHMKcmVsdQpxEFgMAAAAaGlkZGVuX3NpemVzcRFLZEtkhnESWAgAAABlbnZfc3BlY3ETY3JsbGFiLm1pc2MuaW5zdHJ1bWVudApTdHViQXR0cgpxFCmBcRV9cRYoWAQAAABfb2JqcRdoBimBcRh9cRkoaAl9cRpYCwAAAHdyYXBwZWRfZW52cRtoBimBcRx9cR0oaAl9cR5YAwAAAGVudnEfaAYpgXEgfXEhKGgJfXEiKFgIAAAAZW52X25hbWVxI1gLAAAAV2Fsa2VyMmQtdjFxJFgLAAAAZm9yY2VfcmVzZXRxJYhYDAAAAHJlY29yZF92aWRlb3EmiVgKAAAAcmVjb3JkX2xvZ3EniXVYCwAAAHByb3h5X2NsYXNzcShjcmxsYWIuZW52cy5neW1fZW52Ckd5bUVudgpxKVgEAAAAYXJnc3EqKXVic2goY3JsbGFiLmVudnMubm9ybWFsaXplZF9lbnYKTm9ybWFsaXplZEVudgpxK2gqKXVic2goY3NhbmRib3gucm9ja3kudGYuZW52cy5iYXNlClRmRW52CnEsaCopdWJYCgAAAF9hdHRyX25hbWVxLVgEAAAAc3BlY3EudWJ1aChjc2FuZGJveC5yb2NreS50Zi5xX2Z1bmN0aW9ucy5jb250aW51b3VzX21scF9xX2Z1bmN0aW9uCkNvbnRpbnVvdXNNTFBRRnVuY3Rpb24KcS9oKil1YlgIAAAAZGlzY291bnRxMEc/764UeuFHrlgMAAAAc2NhbGVfcmV3YXJkcTFHP/AAAAAAAABYAgAAAGxwcTJoBimBcTN9cTQoaAl9cTUoWBUAAABtYXhfZXhwbG9yYXRvcnlfc3RlcHNxNksLaAtoDFgKAAAAYmF0Y2hfc2l6ZXE3SyBoMUc/8AAAAAAAAFgUAAAAcG9saWN5X2xlYXJuaW5nX3JhdGVxOEc/Gjbi6xxDLVgIAAAAbl9lcG9jaHNxOU2IE1gQAAAAcWZfbGVhcm5pbmdfcmF0ZXE6Rz9QYk3S8an8aB9oGFgDAAAATF9wcTtHP8mZmZmZmZpYBgAAAHBvbGljeXE8aAYpgXE9fXE+KGgJfXE/KGgPaBBYBAAAAG5hbWVxQGg8aBNoFCmBcUF9cUIoaBdoGGgtaC51YmgRS2RLMksZh3FDdWgoY3NhbmRib3gucm9ja3kudGYucG9saWNpZXMuZGV0ZXJtaW5pc3RpY19tbHBfcG9saWN5CkRldGVybWluaXN0aWNNTFBQb2xpY3kKcURoKil1YlgLAAAAYl9zdGVwX3NpemVxRUc/Ojbi6xxDLVgFAAAAc2lnbWFxRkc/uZmZmZmZmnVoKGNleHBsb3JhdGlvbl9zdHJhdGVnaWVzX3RlbnNvcmZsb3cucGVyc2lzdGVuY2VfbGVuZ3RoX2hpZ2hlcl9kaW1lbnNpb25zClBlcnNpc3RlbmNlX0xlbmd0aF9FeHBsb3JhdGlvbgpxR2gqKXViaDhHPxo24uscQy1oN0sgaDlNiBNYDQAAAG1pbl9wb29sX3NpemVxSE0QJ2g6Rz9QYk3S8an8WA8AAABtYXhfcGF0aF9sZW5ndGhxSWgUKYFxSn1xSyhoF2gYaC1YBwAAAGhvcml6b25xTHViWAwAAABlcG9jaF9sZW5ndGhxTU3oA2gfaBhoPGg9WAQAAABwbG90cU6JWAIAAABlc3FPaAYpgXFQfXFRKGgJfXFSaBNoFCmBcVN9cVQoaBdoGGgtaC51YnNoKGNybGxhYi5leHBsb3JhdGlvbl9zdHJhdGVnaWVzLm91X3N0cmF0ZWd5Ck9VU3RyYXRlZ3kKcVVoKil1YnVoKGNkZHBnX3RlbnNvcmZsb3cuZGRwZ19wb2x5UkwKRERQRwpxVmgqKXViWAUAAAB0cmFpbnFXKX1xWHRxWXViLg==",
  "exp_name": "Tensorflow_RLLAB_Results/PolyRL/Walker_Lab_Run/",
  "json_args": {
    "algo": {
      "_name": "ddpg_tensorflow.ddpg_polyRL.DDPG",
      "batch_size": 32,
      "discount": 0.99,
      "epoch_length": 1000,
      "es": {
        "_name": "rllab.exploration_strategies.ou_strategy.OUStrategy",
        "env_spec": {
          "attr": "spec",
          "obj": {
            "_name": "sandbox.rocky.tf.envs.base.TfEnv",
            "wrapped_env": {
              "_name": "rllab.envs.normalized_env.NormalizedEnv",
              "env": {
                "_name": "rllab.envs.gym_env.GymEnv",
                "env_name": "Walker2d-v1",
                "force_reset": true,
                "record_log": false,
                "record_video": false
              }
            }
          }
        }
      },
      "lp": {
        "L_p": 0.2,
        "_name": "exploration_strategies_tensorflow.persistence_length_higher_dimensions.Persistence_Length_Exploration",
        "b_step_size": 0.0004,
        "batch_size": 32,
        "env": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "Walker2d-v1",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        },
        "max_exploratory_steps": 11,
        "n_epochs": 5000,
        "policy": {
          "_name": "sandbox.rocky.tf.policies.deterministic_mlp_policy.DeterministicMLPPolicy",
          "env_spec": {
            "attr": "spec",
            "obj": {
              "_name": "sandbox.rocky.tf.envs.base.TfEnv",
              "wrapped_env": {
                "_name": "rllab.envs.normalized_env.NormalizedEnv",
                "env": {
                  "_name": "rllab.envs.gym_env.GymEnv",
                  "env_name": "Walker2d-v1",
                  "force_reset": true,
                  "record_log": false,
                  "record_video": false
                }
              }
            }
          },
          "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
          "hidden_sizes": [
            100,
            50,
            25
          ],
          "name": "policy"
        },
        "policy_learning_rate": 0.0001,
        "qf": {
          "_name": "sandbox.rocky.tf.q_functions.continuous_mlp_q_function.ContinuousMLPQFunction",
          "env_spec": {
            "attr": "spec",
            "obj": {
              "_name": "sandbox.rocky.tf.envs.base.TfEnv",
              "wrapped_env": {
                "_name": "rllab.envs.normalized_env.NormalizedEnv",
                "env": {
                  "_name": "rllab.envs.gym_env.GymEnv",
                  "env_name": "Walker2d-v1",
                  "force_reset": true,
                  "record_log": false,
                  "record_video": false
                }
              }
            }
          },
          "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
          "hidden_sizes": [
            100,
            100
          ]
        },
        "qf_learning_rate": 0.001,
        "scale_reward": 1.0,
        "sigma": 0.1
      },
      "max_path_length": {
        "attr": "horizon",
        "obj": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "Walker2d-v1",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        }
      },
      "min_pool_size": 10000,
      "n_epochs": 5000,
      "plot": false,
      "policy_learning_rate": 0.0001,
      "qf": {
        "_name": "sandbox.rocky.tf.q_functions.continuous_mlp_q_function.ContinuousMLPQFunction",
        "env_spec": {
          "attr": "spec",
          "obj": {
            "_name": "sandbox.rocky.tf.envs.base.TfEnv",
            "wrapped_env": {
              "_name": "rllab.envs.normalized_env.NormalizedEnv",
              "env": {
                "_name": "rllab.envs.gym_env.GymEnv",
                "env_name": "Walker2d-v1",
                "force_reset": true,
                "record_log": false,
                "record_video": false
              }
            }
          }
        },
        "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
        "hidden_sizes": [
          100,
          100
        ]
      },
      "qf_learning_rate": 0.001,
      "scale_reward": 1.0
    },
    "env": {
      "_name": "sandbox.rocky.tf.envs.base.TfEnv",
      "wrapped_env": {
        "_name": "rllab.envs.normalized_env.NormalizedEnv",
        "env": {
          "_name": "rllab.envs.gym_env.GymEnv",
          "env_name": "Walker2d-v1",
          "force_reset": true,
          "record_log": false,
          "record_video": false
        }
      }
    },
    "policy": {
      "_name": "sandbox.rocky.tf.policies.deterministic_mlp_policy.DeterministicMLPPolicy",
      "env_spec": {
        "attr": "spec",
        "obj": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "Walker2d-v1",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        }
      },
      "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
      "hidden_sizes": [
        100,
        50,
        25
      ],
      "name": "policy"
    }
  },
  "log_dir": "/home/ml/rislam4/Documents/RLLAB/rllab/data/local/experiment/Tensorflow_RLLAB_Results/PolyRL/Walker_Lab_Run/",
  "log_tabular_only": false,
  "n_parallel": 1,
  "params_log_file": "params.json",
  "plot": false,
  "resume_from": null,
  "seed": 1,
  "snapshot_gap": 1,
  "snapshot_mode": "last",
  "tabular_log_file": "progress.csv",
  "text_log_file": "debug.log",
  "use_cloudpickle": false,
  "variant_data": null,
  "variant_log_file": "variant.json"
}