{
  "args_data": "gANjcmxsYWIubWlzYy5pbnN0cnVtZW50ClN0dWJNZXRob2RDYWxsCnEAKYFxAX1xAihYBgAAAF9fYXJnc3EDKGNybGxhYi5taXNjLmluc3RydW1lbnQKU3R1Yk9iamVjdApxBCmBcQV9cQYoWAYAAABrd2FyZ3NxB31xCChYAgAAAHFmcQloBCmBcQp9cQsoaAd9cQwoWBMAAABoaWRkZW5fbm9ubGluZWFyaXR5cQ1jdGVuc29yZmxvdy5weXRob24ub3BzLmdlbl9ubl9vcHMKcmVsdQpxDlgIAAAAZW52X3NwZWNxD2NybGxhYi5taXNjLmluc3RydW1lbnQKU3R1YkF0dHIKcRApgXERfXESKFgEAAAAX29ianETaAQpgXEUfXEVKGgHfXEWWAsAAAB3cmFwcGVkX2VudnEXaAQpgXEYfXEZKGgHfXEaWAMAAABlbnZxG2gEKYFxHH1xHShoB31xHihYDAAAAHJlY29yZF92aWRlb3EfiVgIAAAAZW52X25hbWVxIFgLAAAASHVtYW5vaWQtdjFxIVgLAAAAZm9yY2VfcmVzZXRxIohYCgAAAHJlY29yZF9sb2dxI4l1WAsAAABwcm94eV9jbGFzc3EkY3JsbGFiLmVudnMuZ3ltX2VudgpHeW1FbnYKcSVYBAAAAGFyZ3NxJil1YnNoJGNybGxhYi5lbnZzLm5vcm1hbGl6ZWRfZW52Ck5vcm1hbGl6ZWRFbnYKcSdoJil1YnNoJGNzYW5kYm94LnJvY2t5LnRmLmVudnMuYmFzZQpUZkVudgpxKGgmKXViWAoAAABfYXR0cl9uYW1lcSlYBAAAAHNwZWNxKnViWAwAAABoaWRkZW5fc2l6ZXNxK0tkS2SGcSx1aCRjc2FuZGJveC5yb2NreS50Zi5xX2Z1bmN0aW9ucy5jb250aW51b3VzX21scF9xX2Z1bmN0aW9uCkNvbnRpbnVvdXNNTFBRRnVuY3Rpb24KcS1oJil1YlgUAAAAcG9saWN5X2xlYXJuaW5nX3JhdGVxLkc/Gjbi6xxDLVgMAAAAc2NhbGVfcmV3YXJkcS9HP7mZmZmZmZpYBAAAAHBsb3RxMIlYCAAAAG5fZXBvY2hzcTFNiBNYDQAAAG1pbl9wb29sX3NpemVxMk0QJ1gQAAAAcWZfbGVhcm5pbmdfcmF0ZXEzRz9QYk3S8an8WAYAAABwb2xpY3lxNGgEKYFxNX1xNihoB31xNyhoK0tkSzJLGYdxOFgEAAAAbmFtZXE5aDRoDWgOaA9oECmBcTp9cTsoaBNoFGgpaCp1YnVoJGNzYW5kYm94LnJvY2t5LnRmLnBvbGljaWVzLmRldGVybWluaXN0aWNfbWxwX3BvbGljeQpEZXRlcm1pbmlzdGljTUxQUG9saWN5CnE8aCYpdWJoG2gUWAIAAABlc3E9aAQpgXE+fXE/KGgHfXFAaA9oECmBcUF9cUIoaBNoFGgpaCp1YnNoJGNybGxhYi5leHBsb3JhdGlvbl9zdHJhdGVnaWVzLm91X3N0cmF0ZWd5Ck9VU3RyYXRlZ3kKcUNoJil1YlgIAAAAZGlzY291bnRxREc/764UeuFHrlgMAAAAZXBvY2hfbGVuZ3RocUVN6ANYAgAAAGxwcUZoBCmBcUd9cUgoaAd9cUkoaAloCmguRz8aNuLrHEMtaC9HP/AAAAAAAABYCwAAAGJfc3RlcF9zaXplcUpHPzo24uscQy1oMU2IE2g0aDVoM0c/UGJN0vGp/FgVAAAAbWF4X2V4cGxvcmF0b3J5X3N0ZXBzcUtLC2gbaBRYBQAAAHNpZ21hcUxHP7mZmZmZmZpYCgAAAGJhdGNoX3NpemVxTUsgWAMAAABMX3BxTkc/yZmZmZmZmnVoJGNleHBsb3JhdGlvbl9zdHJhdGVnaWVzX3RlbnNvcmZsb3cucGVyc2lzdGVuY2VfbGVuZ3RoX2hpZ2hlcl9kaW1lbnNpb25zClBlcnNpc3RlbmNlX0xlbmd0aF9FeHBsb3JhdGlvbgpxT2gmKXViWA8AAABtYXhfcGF0aF9sZW5ndGhxUGgQKYFxUX1xUihoE2gUaClYBwAAAGhvcml6b25xU3ViaE1LIHVoJGNkZHBnX3RlbnNvcmZsb3cuZGRwZ19wb2x5UkwKRERQRwpxVGgmKXViWAUAAAB0cmFpbnFVKX1xVnRxV1gIAAAAX19rd2FyZ3NxWH1xWXViLg==",
  "exp_name": "Tensorflow_RLLAB_Results/PolyRL/Humanoid/",
  "json_args": {
    "algo": {
      "_name": "ddpg_tensorflow.ddpg_polyRL.DDPG",
      "batch_size": 32,
      "discount": 0.99,
      "epoch_length": 1000,
      "es": {
        "_name": "rllab.exploration_strategies.ou_strategy.OUStrategy",
        "env_spec": {
          "attr": "spec",
          "obj": {
            "_name": "sandbox.rocky.tf.envs.base.TfEnv",
            "wrapped_env": {
              "_name": "rllab.envs.normalized_env.NormalizedEnv",
              "env": {
                "_name": "rllab.envs.gym_env.GymEnv",
                "env_name": "Humanoid-v1",
                "force_reset": true,
                "record_log": false,
                "record_video": false
              }
            }
          }
        }
      },
      "lp": {
        "L_p": 0.2,
        "_name": "exploration_strategies_tensorflow.persistence_length_higher_dimensions.Persistence_Length_Exploration",
        "b_step_size": 0.0004,
        "batch_size": 32,
        "env": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "Humanoid-v1",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        },
        "max_exploratory_steps": 11,
        "n_epochs": 5000,
        "policy": {
          "_name": "sandbox.rocky.tf.policies.deterministic_mlp_policy.DeterministicMLPPolicy",
          "env_spec": {
            "attr": "spec",
            "obj": {
              "_name": "sandbox.rocky.tf.envs.base.TfEnv",
              "wrapped_env": {
                "_name": "rllab.envs.normalized_env.NormalizedEnv",
                "env": {
                  "_name": "rllab.envs.gym_env.GymEnv",
                  "env_name": "Humanoid-v1",
                  "force_reset": true,
                  "record_log": false,
                  "record_video": false
                }
              }
            }
          },
          "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
          "hidden_sizes": [
            100,
            50,
            25
          ],
          "name": "policy"
        },
        "policy_learning_rate": 0.0001,
        "qf": {
          "_name": "sandbox.rocky.tf.q_functions.continuous_mlp_q_function.ContinuousMLPQFunction",
          "env_spec": {
            "attr": "spec",
            "obj": {
              "_name": "sandbox.rocky.tf.envs.base.TfEnv",
              "wrapped_env": {
                "_name": "rllab.envs.normalized_env.NormalizedEnv",
                "env": {
                  "_name": "rllab.envs.gym_env.GymEnv",
                  "env_name": "Humanoid-v1",
                  "force_reset": true,
                  "record_log": false,
                  "record_video": false
                }
              }
            }
          },
          "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
          "hidden_sizes": [
            100,
            100
          ]
        },
        "qf_learning_rate": 0.001,
        "scale_reward": 1.0,
        "sigma": 0.1
      },
      "max_path_length": {
        "attr": "horizon",
        "obj": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "Humanoid-v1",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        }
      },
      "min_pool_size": 10000,
      "n_epochs": 5000,
      "plot": false,
      "policy_learning_rate": 0.0001,
      "qf": {
        "_name": "sandbox.rocky.tf.q_functions.continuous_mlp_q_function.ContinuousMLPQFunction",
        "env_spec": {
          "attr": "spec",
          "obj": {
            "_name": "sandbox.rocky.tf.envs.base.TfEnv",
            "wrapped_env": {
              "_name": "rllab.envs.normalized_env.NormalizedEnv",
              "env": {
                "_name": "rllab.envs.gym_env.GymEnv",
                "env_name": "Humanoid-v1",
                "force_reset": true,
                "record_log": false,
                "record_video": false
              }
            }
          }
        },
        "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
        "hidden_sizes": [
          100,
          100
        ]
      },
      "qf_learning_rate": 0.001,
      "scale_reward": 0.1
    },
    "env": {
      "_name": "sandbox.rocky.tf.envs.base.TfEnv",
      "wrapped_env": {
        "_name": "rllab.envs.normalized_env.NormalizedEnv",
        "env": {
          "_name": "rllab.envs.gym_env.GymEnv",
          "env_name": "Humanoid-v1",
          "force_reset": true,
          "record_log": false,
          "record_video": false
        }
      }
    },
    "policy": {
      "_name": "sandbox.rocky.tf.policies.deterministic_mlp_policy.DeterministicMLPPolicy",
      "env_spec": {
        "attr": "spec",
        "obj": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "Humanoid-v1",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        }
      },
      "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
      "hidden_sizes": [
        100,
        50,
        25
      ],
      "name": "policy"
    }
  },
  "log_dir": "/home/ml/rislam4/Documents/RLLAB/rllab/data/local/experiment/Tensorflow_RLLAB_Results/PolyRL/Humanoid/",
  "log_tabular_only": false,
  "n_parallel": 1,
  "params_log_file": "params.json",
  "plot": false,
  "resume_from": null,
  "seed": 1,
  "snapshot_gap": 1,
  "snapshot_mode": "last",
  "tabular_log_file": "progress.csv",
  "text_log_file": "debug.log",
  "use_cloudpickle": false,
  "variant_data": null,
  "variant_log_file": "variant.json"
}