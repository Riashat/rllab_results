{
  "args_data": "gANjcmxsYWIubWlzYy5pbnN0cnVtZW50ClN0dWJNZXRob2RDYWxsCnEAKYFxAX1xAihYBgAAAF9fYXJnc3EDKGNybGxhYi5taXNjLmluc3RydW1lbnQKU3R1Yk9iamVjdApxBCmBcQV9cQYoWAYAAABrd2FyZ3NxB31xCChYDwAAAG1heF9wYXRoX2xlbmd0aHEJY3JsbGFiLm1pc2MuaW5zdHJ1bWVudApTdHViQXR0cgpxCimBcQt9cQwoWAQAAABfb2JqcQ1oBCmBcQ59cQ8oaAd9cRBYCwAAAHdyYXBwZWRfZW52cRFoBCmBcRJ9cRMoaAd9cRRYAwAAAGVudnEVaAQpgXEWfXEXKGgHfXEYKFgIAAAAZW52X25hbWVxGVgLAAAASHVtYW5vaWQtdjFxGlgKAAAAcmVjb3JkX2xvZ3EbiVgLAAAAZm9yY2VfcmVzZXRxHIhYDAAAAHJlY29yZF92aWRlb3EdiXVYCwAAAHByb3h5X2NsYXNzcR5jcmxsYWIuZW52cy5neW1fZW52Ckd5bUVudgpxH1gEAAAAYXJnc3EgKXVic2geY3JsbGFiLmVudnMubm9ybWFsaXplZF9lbnYKTm9ybWFsaXplZEVudgpxIWggKXVic2geY3NhbmRib3gucm9ja3kudGYuZW52cy5iYXNlClRmRW52CnEiaCApdWJYCgAAAF9hdHRyX25hbWVxI1gHAAAAaG9yaXpvbnEkdWJYCAAAAGRpc2NvdW50cSVHP++uFHrhR65YFAAAAHBvbGljeV9sZWFybmluZ19yYXRlcSZHPxo24uscQy1YAgAAAGxwcSdoBCmBcSh9cSkoaAd9cSooWBUAAABtYXhfZXhwbG9yYXRvcnlfc3RlcHNxK0sLaCZHPxo24uscQy1YBgAAAHBvbGljeXEsaAQpgXEtfXEuKGgHfXEvKFgTAAAAaGlkZGVuX25vbmxpbmVhcml0eXEwY3RlbnNvcmZsb3cucHl0aG9uLm9wcy5nZW5fbm5fb3BzCnJlbHUKcTFYDAAAAGhpZGRlbl9zaXplc3EyS2RLMksZh3EzWAgAAABlbnZfc3BlY3E0aAopgXE1fXE2KGgNaA5oI1gEAAAAc3BlY3E3dWJYBAAAAG5hbWVxOGgsdWgeY3NhbmRib3gucm9ja3kudGYucG9saWNpZXMuZGV0ZXJtaW5pc3RpY19tbHBfcG9saWN5CkRldGVybWluaXN0aWNNTFBQb2xpY3kKcTloICl1YlgCAAAAcWZxOmgEKYFxO31xPChoB31xPShoMGgxaDJLZEtkhnE+aDRoCimBcT99cUAoaA1oDmgjaDd1YnVoHmNzYW5kYm94LnJvY2t5LnRmLnFfZnVuY3Rpb25zLmNvbnRpbnVvdXNfbWxwX3FfZnVuY3Rpb24KQ29udGludW91c01MUFFGdW5jdGlvbgpxQWggKXViWAgAAABuX2Vwb2Noc3FCTYgTWAwAAABzY2FsZV9yZXdhcmRxQ0c/8AAAAAAAAFgFAAAAc2lnbWFxREc/uZmZmZmZmlgQAAAAcWZfbGVhcm5pbmdfcmF0ZXFFRz9QYk3S8an8WAsAAABiX3N0ZXBfc2l6ZXFGRz86NuLrHEMtWAMAAABMX3BxR0c/yZmZmZmZmmgVaA5YCgAAAGJhdGNoX3NpemVxSEsgdWgeY2V4cGxvcmF0aW9uX3N0cmF0ZWdpZXNfdGVuc29yZmxvdy5wZXJzaXN0ZW5jZV9sZW5ndGhfaGlnaGVyX2RpbWVuc2lvbnMKUGVyc2lzdGVuY2VfTGVuZ3RoX0V4cGxvcmF0aW9uCnFJaCApdWJoLGgtWAQAAABwbG90cUqJaDpoO2hCTYgTaBVoDmhFRz9QYk3S8an8WAIAAABlc3FLaAQpgXFMfXFNKGgHfXFOaDRoCimBcU99cVAoaA1oDmgjaDd1YnNoHmNybGxhYi5leHBsb3JhdGlvbl9zdHJhdGVnaWVzLm91X3N0cmF0ZWd5Ck9VU3RyYXRlZ3kKcVFoICl1YlgNAAAAbWluX3Bvb2xfc2l6ZXFSTRAnaENHP/AAAAAAAABoSEsgWAwAAABlcG9jaF9sZW5ndGhxU03oA3VoHmNkZHBnX3RlbnNvcmZsb3cuZGRwZ19wb2x5UkwKRERQRwpxVGggKXViWAUAAAB0cmFpbnFVKX1xVnRxV1gIAAAAX19rd2FyZ3NxWH1xWXViLg==",
  "exp_name": "Tensorflow_RLLAB_Results/PolyRL/Humanoid/",
  "json_args": {
    "algo": {
      "_name": "ddpg_tensorflow.ddpg_polyRL.DDPG",
      "batch_size": 32,
      "discount": 0.99,
      "epoch_length": 1000,
      "es": {
        "_name": "rllab.exploration_strategies.ou_strategy.OUStrategy",
        "env_spec": {
          "attr": "spec",
          "obj": {
            "_name": "sandbox.rocky.tf.envs.base.TfEnv",
            "wrapped_env": {
              "_name": "rllab.envs.normalized_env.NormalizedEnv",
              "env": {
                "_name": "rllab.envs.gym_env.GymEnv",
                "env_name": "Humanoid-v1",
                "force_reset": true,
                "record_log": false,
                "record_video": false
              }
            }
          }
        }
      },
      "lp": {
        "L_p": 0.2,
        "_name": "exploration_strategies_tensorflow.persistence_length_higher_dimensions.Persistence_Length_Exploration",
        "b_step_size": 0.0004,
        "batch_size": 32,
        "env": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "Humanoid-v1",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        },
        "max_exploratory_steps": 11,
        "n_epochs": 5000,
        "policy": {
          "_name": "sandbox.rocky.tf.policies.deterministic_mlp_policy.DeterministicMLPPolicy",
          "env_spec": {
            "attr": "spec",
            "obj": {
              "_name": "sandbox.rocky.tf.envs.base.TfEnv",
              "wrapped_env": {
                "_name": "rllab.envs.normalized_env.NormalizedEnv",
                "env": {
                  "_name": "rllab.envs.gym_env.GymEnv",
                  "env_name": "Humanoid-v1",
                  "force_reset": true,
                  "record_log": false,
                  "record_video": false
                }
              }
            }
          },
          "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
          "hidden_sizes": [
            100,
            50,
            25
          ],
          "name": "policy"
        },
        "policy_learning_rate": 0.0001,
        "qf": {
          "_name": "sandbox.rocky.tf.q_functions.continuous_mlp_q_function.ContinuousMLPQFunction",
          "env_spec": {
            "attr": "spec",
            "obj": {
              "_name": "sandbox.rocky.tf.envs.base.TfEnv",
              "wrapped_env": {
                "_name": "rllab.envs.normalized_env.NormalizedEnv",
                "env": {
                  "_name": "rllab.envs.gym_env.GymEnv",
                  "env_name": "Humanoid-v1",
                  "force_reset": true,
                  "record_log": false,
                  "record_video": false
                }
              }
            }
          },
          "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
          "hidden_sizes": [
            100,
            100
          ]
        },
        "qf_learning_rate": 0.001,
        "scale_reward": 1.0,
        "sigma": 0.1
      },
      "max_path_length": {
        "attr": "horizon",
        "obj": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "Humanoid-v1",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        }
      },
      "min_pool_size": 10000,
      "n_epochs": 5000,
      "plot": false,
      "policy_learning_rate": 0.0001,
      "qf": {
        "_name": "sandbox.rocky.tf.q_functions.continuous_mlp_q_function.ContinuousMLPQFunction",
        "env_spec": {
          "attr": "spec",
          "obj": {
            "_name": "sandbox.rocky.tf.envs.base.TfEnv",
            "wrapped_env": {
              "_name": "rllab.envs.normalized_env.NormalizedEnv",
              "env": {
                "_name": "rllab.envs.gym_env.GymEnv",
                "env_name": "Humanoid-v1",
                "force_reset": true,
                "record_log": false,
                "record_video": false
              }
            }
          }
        },
        "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
        "hidden_sizes": [
          100,
          100
        ]
      },
      "qf_learning_rate": 0.001,
      "scale_reward": 1.0
    },
    "env": {
      "_name": "sandbox.rocky.tf.envs.base.TfEnv",
      "wrapped_env": {
        "_name": "rllab.envs.normalized_env.NormalizedEnv",
        "env": {
          "_name": "rllab.envs.gym_env.GymEnv",
          "env_name": "Humanoid-v1",
          "force_reset": true,
          "record_log": false,
          "record_video": false
        }
      }
    },
    "policy": {
      "_name": "sandbox.rocky.tf.policies.deterministic_mlp_policy.DeterministicMLPPolicy",
      "env_spec": {
        "attr": "spec",
        "obj": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "Humanoid-v1",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        }
      },
      "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
      "hidden_sizes": [
        100,
        50,
        25
      ],
      "name": "policy"
    }
  },
  "log_dir": "/home/ml/rislam4/Documents/RLLAB/rllab/data/local/experiment/Tensorflow_RLLAB_Results/PolyRL/Humanoid/",
  "log_tabular_only": false,
  "n_parallel": 1,
  "params_log_file": "params.json",
  "plot": false,
  "resume_from": null,
  "seed": 1,
  "snapshot_gap": 1,
  "snapshot_mode": "last",
  "tabular_log_file": "progress.csv",
  "text_log_file": "debug.log",
  "use_cloudpickle": false,
  "variant_data": null,
  "variant_log_file": "variant.json"
}